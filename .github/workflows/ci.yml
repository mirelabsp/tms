# Nome do workflow que aparecerá na aba "Actions" do GitHub
name: CI - Build and Push to ECR

# Define o gatilho: este workflow roda a cada push na branch 'main'
on:
  push:
    branches: [ main ]

# Define os "trabalhos" a serem executados
jobs:
  build-and-push:
    name: Build and Push to ECR
    # A máquina virtual que será usada para rodar os comandos
    runs-on: ubuntu-latest

    # Os passos sequenciais do nosso trabalho
    steps:
      # 1. Pega o código do seu repositório para a máquina virtual
      - name: Checkout repository
        uses: actions/checkout@v4

      # 2. Configura as credenciais da AWS usando os Secrets que criamos
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_REGION }}

      # 3. Faz login no Amazon ECR
      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v2

      # 4. Faz o build, cria as tags e envia a imagem para o ECR
      - name: Build, tag, and push image to Amazon ECR
        env:
          # Pega o nome do registro (ex: 123456789012.dkr.ecr.us-east-1.amazonaws.com) do passo anterior
          ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
          # Pega o nome do repositório dos nossos secrets
          ECR_REPOSITORY: ${{ secrets.AWS_ECR_REPOSITORY }}
          # Pega o código do commit para usar como tag (ex: f9a3c2b)
          IMAGE_TAG: ${{ github.sha }}
        run: |
          # Constrói a imagem Docker. O comando é rodado a partir da raiz,
          # então especificamos que o Dockerfile está na pasta ./backend
          docker build -t $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG -t $ECR_REGISTRY/$ECR_REPOSITORY:latest ./backend
          
          # Envia a imagem para o ECR com a tag do commit
          docker push $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG

          # Envia a imagem para o ECR também com a tag "latest"
          docker push $ECR_REGISTRY/$ECR_REPOSITORY:latest